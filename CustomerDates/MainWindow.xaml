<Window
        
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:controls="using:Microsoft.UI.Xaml.Controls"
        xmlns:local="clr-namespace:CustomerDates"
        x:Class="CustomerDates.MainWindow"
        mc:Ignorable="d"
        Height="650" Width="1200" WindowStartupLocation="CenterScreen"
        Closed="Window_Closed" WindowStyle="None" AllowsTransparency="True" AllowDrop="False"
        ResizeMode="NoResize" MinWidth="1200" MinHeight="650" KeyDown="Window_KeyDown" Loaded="Window_Loaded"
        Background="White" Title="Customer Dates">
    <Window.Resources>

        <FontFamily x:Key="cdfont">Arial</FontFamily>

        <Style x:Key="ColumnHeaderStyle" TargetType="DataGridColumnHeader">
            <Setter Property="BorderBrush" Value="Black"/>
            <Setter Property="BorderThickness" Value="0,0,1,1"/>
            <Setter Property="Background" Value="Gainsboro"/>
            <Setter Property="FontFamily" Value="Eagle"/>
            <Setter Property="Padding" Value="3,1,0,0"/>
            <Setter Property="FontFamily" Value="{StaticResource cdfont}"/>
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="Height" Value="23"/>
        </Style>

        <Thickness x:Key="Pdng">2,2.5,0,0</Thickness>


        <Style x:Key="DataGridRowStyle" TargetType="DataGridRow">
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Height" Value="23"/>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="#FF332E80"/>
                    <Setter Property="Foreground" Value="White" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="DataGridCellStyle" TargetType="DataGridCell">
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="#FF332E80"/>
                    <Setter Property="Foreground" Value="White"/>
                </Trigger>
            </Style.Triggers>
            <Setter Property="BorderThickness" Value="0"/>
        </Style>

        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FF1C1492"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FF665CFF"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="White"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="ObjectsButtonsStyle" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">

                                <Setter Property="BorderBrush" TargetName="border" Value="#FF000000"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#FF000000"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="MenuItemsStandardStyle" TargetType="{x:Type Button}">
            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsDefaulted" Value="True">
                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FF665CFF"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FFFFFFFF"/>
                    <Setter Property="BorderThickness" TargetName="border" Value="2,0,0,0"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FF000000"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FFFFFFFF"/>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FFBCDDEE"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF245A83"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

    </Window.Resources>
    <Grid Margin="0">

        <DockPanel Name="Toolsdock" Background="#FF050059" Height="33" VerticalAlignment="Top" HorizontalAlignment="Stretch" MouseDown="Toolsdock_MouseDown">s
            <Button HorizontalAlignment="Left" x:Name="Menubtn" VerticalAlignment="Top" Width="21" Height="20" Margin="7,7,0,0" BorderBrush="{x:Null}" BorderThickness="0" Click="Menubtn_Click" Cursor="Hand" >
                <Button.Template>
                    <ControlTemplate TargetType="{x:Type ButtonBase}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Button.IsDefaulted" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="border" >
                                    <Setter.Value>
                                        <ImageBrush ImageSource="Assets/Menu blue.png" Stretch="Uniform" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="border">

                                    <Setter.Value>
                                        <ImageBrush ImageSource="Assets/Menu.png" Stretch="Uniform" Opacity="0.8"/>
                                    </Setter.Value>
                                </Setter>


                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Button.Template>
                <Button.Background>
                    <ImageBrush ImageSource="Assets/Menu.png" Stretch="Uniform"/>
                </Button.Background>
            </Button>
            <Separator HorizontalAlignment="Left" Height="4" Margin="0,15,0,0" VerticalAlignment="Top" Width="25" RenderTransformOrigin="0.5,0.5" Background="White">
                <Separator.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform Angle="-90"/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Separator.RenderTransform>
            </Separator>
            <Button  HorizontalAlignment="Left" x:Name="Add_btn" Margin="0,5,0,0" VerticalAlignment="Top" Width="23" Height="23" BorderThickness="0" FontSize="14" Click="Add_btn_Click" Cursor="Hand">
                <Button.Template>
                    <ControlTemplate TargetType="{x:Type ButtonBase}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Button.IsDefaulted" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="border">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="Assets/Add Blue.png"/>
                                    </Setter.Value>
                                </Setter>

                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="border">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="Assets/Add Black.png"/>
                                    </Setter.Value>
                                </Setter>

                            </Trigger>
                            <Trigger Property="ToggleButton.IsChecked" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#FFBCDDEE"/>

                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" TargetName="border">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="Assets/Add Black.png"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Button.Template>
                <Button.Background>
                    <ImageBrush Stretch="Uniform" ImageSource="Assets/Add White.png"/>
                </Button.Background>
            </Button>
            <Button x:Name="Update_btn" Width="23" Height="23" Margin="10,5,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" BorderBrush="{x:Null}" BorderThickness="0" Foreground="{x:Null}" Click="Update_btn_Click">
                <Button.Background>
                    <ImageBrush ImageSource="Assets/Update White.png"/>
                </Button.Background>
                <Button.Template>
                    <ControlTemplate TargetType="{x:Type ButtonBase}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Button.IsDefaulted" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="border">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="Assets/Update Blue.png"/>
                                    </Setter.Value>
                                </Setter>

                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="border">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="Assets/Update Black.png"/>
                                    </Setter.Value>
                                </Setter>

                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" TargetName="border">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="Assets/Update Black.png"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Button.Template>
            </Button>
            <Button x:Name="Search_btn" Width="23" Height="23" Margin="10,5,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" BorderThickness="0" BorderBrush="{x:Null}" Foreground="{x:Null}" Click="Search_btn_Click">
                <Button.Template>
                    <ControlTemplate TargetType="{x:Type ButtonBase}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Button.IsDefaulted" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="border">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="Assets/Search Blue.png"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="border">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="Assets/Search Black.png"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="ToggleButton.IsChecked" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#FFBCDDEE"/>

                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" TargetName="border">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="Assets/Search Black.png"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Button.Template>
                <Button.Background>
                    <ImageBrush ImageSource="Assets/Search White.png"/>
                </Button.Background>
            </Button>
            <Button x:Name="Delete_btn" Width="23" Height="23" Margin="10,5,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" BorderThickness="0" BorderBrush="{x:Null}" Foreground="{x:Null}" Click="Delete_btn_Click">
                <Button.Template>
                    <ControlTemplate TargetType="{x:Type ButtonBase}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Button.IsDefaulted" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="border">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="Assets/Delete ICON Blue.png"/>
                                    </Setter.Value>
                                </Setter>

                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="border">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="Assets/Delete ICON Black.png"/>
                                    </Setter.Value>
                                </Setter>

                            </Trigger>
                            <Trigger Property="ToggleButton.IsChecked" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#FFBCDDEE"/>

                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" TargetName="border">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="Assets/Delete ICON Black.png"/>
                                    </Setter.Value>
                                </Setter>

                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Button.Template>
                <Button.Background>
                    <ImageBrush ImageSource="Assets/Delete ICON White.png"/>
                </Button.Background>
            </Button>
            <Button x:Name="Preview_btn" Width="23" Height="23" Margin="10,5,15,0" VerticalAlignment="Top" BorderThickness="0" BorderBrush="{x:Null}" Foreground="{x:Null}" Click="Preview_btn_Click" >
                <Button.Template>
                    <ControlTemplate TargetType="{x:Type ButtonBase}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Button.IsDefaulted" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="border">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="Assets/View Blue.png"/>
                                    </Setter.Value>
                                </Setter>

                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="border">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="Assets/View Black.png"/>
                                    </Setter.Value>
                                </Setter>

                            </Trigger>
                            <Trigger Property="ToggleButton.IsChecked" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#FFBCDDEE"/>

                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" TargetName="border">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="Assets/View Black.png"/>
                                    </Setter.Value>
                                </Setter>

                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Button.Template>
                <Button.Background>
                    <ImageBrush ImageSource="Assets/View White.png"/>
                </Button.Background>
            </Button>
            <Button  HorizontalAlignment="Right" x:Name="MMbtnexit" Style="{DynamicResource newdeviceexitstyle}" VerticalAlignment="Center" Width="15" Height="15" BorderBrush="{x:Null}" Click="MMbtnexit_Click" Cursor="Hand" Margin="0,0,10,0" DockPanel.Dock="Right">
                <Button.Resources>
                    <SolidColorBrush x:Key="Button.Static.Background" Color="#00000000"/>
                    <SolidColorBrush x:Key="Button.Static.Border" Color="#00000000"/>
                    <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#00000000"/>
                    <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#00000000"/>
                    <SolidColorBrush x:Key="Button.Pressed.Background" Color="#00000000"/>
                    <SolidColorBrush x:Key="Button.Pressed.Border" Color="#00000000"/>
                    <SolidColorBrush x:Key="Button.Disabled.Background" Color="#00000000"/>
                    <SolidColorBrush x:Key="Button.Disabled.Border" Color="#00000000"/>
                    <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#00000000"/>
                    <Style x:Key="newdeviceexitstyle" TargetType="{x:Type Button}">

                        <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
                        <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                        <Setter Property="BorderThickness" Value="1"/>
                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                        <Setter Property="Padding" Value="1"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsDefaulted" Value="true">
                                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="true">
                                            <Setter Property="Background" TargetName="border">

                                                <Setter.Value>
                                                    <ImageBrush ImageSource="Assets/Exit Blue.png" />
                                                </Setter.Value>

                                            </Setter>
                                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="true">
                                            <Setter Property="Background" TargetName="border">

                                                <Setter.Value>
                                                    <ImageBrush ImageSource="Assets/Exit Black.png" Stretch="Uniform" />
                                                </Setter.Value>

                                            </Setter>
                                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Button.Resources>
                <Button.Background>
                    <ImageBrush ImageSource="Assets/Exit Icon (Program).png" Stretch="Uniform"/>
                </Button.Background>
            </Button>
            <Button Width="15" Height="15" x:Name="Maximizebtn" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,10,0" Click="Maximizebtn_Click" BorderBrush="{x:Null}" Cursor="Hand" DockPanel.Dock="Right" >
                <Button.Template>
                    <ControlTemplate TargetType="{x:Type ButtonBase}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Button.IsDefaulted" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="border">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="Assets/Maximize Blue.png" Stretch="Uniform"/>
                                    </Setter.Value>
                                </Setter>

                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="border">
                                    <Setter.Value>
                                        <ImageBrush Stretch="Uniform" ImageSource="Assets/Maximize Black.png"/>
                                    </Setter.Value>
                                </Setter>

                            </Trigger>
                            <Trigger Property="ToggleButton.IsChecked" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#FFBCDDEE"/>

                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" TargetName="border" Value="#FFF4F4F4"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Button.Template>
                <Button.Background>
                    <ImageBrush ImageSource="Assets/Maximize.png" Stretch="Uniform"/>
                </Button.Background>
            </Button>
            <Button  HorizontalAlignment="Right" Click="Minimizebtn_Click" x:Name="Minimizebtn" Margin="0,0,10,0" VerticalAlignment="Center" Width="15" Height="15" BorderBrush="{x:Null}" BorderThickness="0" Cursor="Hand" DockPanel.Dock="Right">
                <Button.Template>
                    <ControlTemplate TargetType="{x:Type ButtonBase}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="border">

                                    <Setter.Value>
                                        <ImageBrush ImageSource="Assets\Minimize icon blue.png" Stretch="Uniform"/>
                                    </Setter.Value>

                                </Setter>

                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="border" >
                                    <Setter.Value>
                                        <ImageBrush ImageSource="Assets\Minimize icon.png" Stretch="Uniform"/>
                                    </Setter.Value>
                                </Setter>

                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Button.Template>
                <Button.Background>
                    <ImageBrush ImageSource="Assets/Minimize icon.png" Stretch="Uniform"/>
                </Button.Background>
            </Button>
        </DockPanel>
        <Rectangle x:Name="menurec" Margin="0,33,0,19.6" Width="130" VerticalAlignment="Stretch" HorizontalAlignment="Left" StrokeThickness="0">
            <Rectangle.Fill>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FF665CFF" Offset="0.003"/>
                    <GradientStop Color="#FF332E80" Offset="1"/>
                </LinearGradientBrush>
            </Rectangle.Fill>
        </Rectangle>

        <Canvas Height="266" x:Name="MyWaterMark" Width="256" Margin="543,167,401,216.6">
            <Image Width="176" Height="200" Margin="0,0,0,0" Canvas.Left="42" Canvas.Top="10" Source="Assets/600x600.png" Opacity="0.63" VerticalAlignment="Center" HorizontalAlignment="Center" />
            <Label Content="Customer Dates" Height="57" FontFamily="{StaticResource cdfont}" Width="267" FontSize="36" Canvas.Left="-4" Canvas.Top="216" Opacity="0.63" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="Black" />
            <Label Content="BY AE3" FontFamily="{StaticResource cdfont}" Canvas.Left="257" Canvas.Top="260" Opacity="0.63" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="Black"/>

        </Canvas>
        <Canvas x:Name="SearchCanvas" HorizontalAlignment="Left" Height="109" Margin="0,33,0,0" VerticalAlignment="Top" Width="130" Visibility="Hidden">
            <TextBox x:Name="Valuesch" Height="22" Background="#FFE5E5E5" TextWrapping="Wrap" Text="Value" Canvas.Top="45" Width="110" Canvas.Left="10" FontFamily="{StaticResource cdfont}" GotFocus="TextBox_GotFocus" LostFocus="TextBox_LostFocus" Foreground="Gray" Padding="0,2,0,0"  BorderBrush="White" BorderThickness="0"/>
            <Button x:Name="Searchexecute" Content="Search" FontFamily="{StaticResource cdfont}" Canvas.Left="10" Canvas.Top="78" Width="110" BorderBrush="White" BorderThickness="1" Height="22" Foreground="White" Click="Searchexecute_Click">
                <Button.Template>
                    <ControlTemplate TargetType="{x:Type ButtonBase}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}"  BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Button.IsDefaulted" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="border">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FF332E80" Offset="0"/>
                                            <GradientStop Color="#FF665CFF" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">

                                <Setter Property="BorderBrush" TargetName="border" Value="White"/>
                                <Setter Property="Background" TargetName="border" Value="Black"/>

                            </Trigger>
                            <Trigger Property="ToggleButton.IsChecked" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#FFBCDDEE"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FF245A83"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" TargetName="border" Value="#FFF4F4F4"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FFADB2B5"/>
                                <Setter Property="Foreground" Value="#FF838383"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Button.Template>
                <Button.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <LinearGradientBrush.RelativeTransform>
                            <TransformGroup>
                                <ScaleTransform CenterY="0.5" CenterX="0.5"/>
                                <SkewTransform CenterY="0.5" CenterX="0.5"/>
                                <RotateTransform Angle="35" CenterY="0.5" CenterX="0.5"/>
                                <TranslateTransform/>
                            </TransformGroup>
                        </LinearGradientBrush.RelativeTransform>
                        <GradientStop Color="#FF665CFF" Offset="0"/>
                        <GradientStop Color="#FF332E80" Offset="1"/>
                    </LinearGradientBrush>
                </Button.Background>
            </Button>
            <Separator Height="2" Margin="0" Canvas.Top="108" Width="120" Background="White" Canvas.Left="5"/>
            <ComboBox x:Name="vtypecbx" FontFamily="{StaticResource cdfont}" Canvas.Top="10" Width="110" Canvas.Left="10" SelectionChanged="vtypecbx_SelectionChanged">
                <ComboBoxItem Content="Name"/>
                <ComboBoxItem Content="Phone"/>
                <ComboBoxItem Content="Model"/>
                <ComboBoxItem Content="Serial Number"/>
                <ComboBoxItem Content="Infopren Code"/>

            </ComboBox>
            <TextBlock x:Name="vtypetxt" Foreground="Gray" FontFamily="{StaticResource cdfont}" HorizontalAlignment="Left" TextWrapping="Wrap" Text="Search By" VerticalAlignment="Top" Canvas.Left="13" Canvas.Top="13"/>
        </Canvas>
        <DockPanel x:Name="ObjectsDock" Margin="0,33,1070,19.6">
            <StackPanel DockPanel.Dock="Top" Margin="0,10,0,0">
                <Button Content="Computer" Margin="0,6,0,0" x:Name="Comp" HorizontalAlignment="Left" VerticalAlignment="Top" Width="130" Foreground="White" BorderBrush="{x:Null}" Background="{x:Null}" FontFamily="{StaticResource cdfont}" FontSize="14" Height="31" Click="Comp_Click" Style="{DynamicResource ObjectsButtonsStyle}" BorderThickness="2,0,0,0" Cursor="Hand"/>
                <Button Content="Laptop" x:Name="Lap" Margin="0,6,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Width="130" Foreground="White" BorderBrush="{x:Null}" Background="{x:Null}" FontFamily="{StaticResource cdfont}" FontSize="14" Height="31" Click="Lap_Click" Style="{DynamicResource ObjectsButtonsStyle}" BorderThickness="2,0,0,0" Cursor="Hand"/>
                <Button Content="Mobile" x:Name="Mobi" Margin="0,6,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Width="130" Foreground="White" BorderBrush="{x:Null}" Background="{x:Null}" FontFamily="{StaticResource cdfont}" FontSize="14" Height="31" Click="Mobi_Click" Style="{DynamicResource ObjectsButtonsStyle}" BorderThickness="2,0,0,0" Cursor="Hand"/>
                <Button Content="Tablet" x:Name="Tblet" Margin="0,6,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Width="130" Foreground="White" BorderBrush="{x:Null}" Background="{x:Null}" FontFamily="{StaticResource cdfont}" FontSize="14" Height="31" Click="Tblet_Click" Style="{DynamicResource ObjectsButtonsStyle}" BorderThickness="2,0,0,0" Cursor="Hand"/>
                <Button Content="Other Devices" x:Name="Oth" Margin="0,6,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Width="130" Foreground="White" BorderBrush="{x:Null}" Background="{x:Null}" FontFamily="{StaticResource cdfont}" FontSize="14" Height="31" Click="Oth_Click" Style="{DynamicResource ObjectsButtonsStyle}" BorderThickness="2,0,0,0" Cursor="Hand"/>
            </StackPanel>
        </DockPanel>
        <Rectangle HorizontalAlignment="Left"  x:Name="menubackrec" Height="33" StrokeThickness="0" VerticalAlignment="Top" Width="36" Fill="#FF332E80" Visibility="Hidden"/>


        <DockPanel HorizontalAlignment="Left" x:Name="Menudock" Height="536" Margin="0,33,0,0" VerticalAlignment="Top" Width="130" Visibility="Hidden">
            <Button Name="Settingsbtn" Content="Settings" Width="130" Background="{x:Null}" Foreground="White" FontSize="14" FontFamily="{StaticResource cdfont}" BorderBrush="{x:Null}" BorderThickness="0" Height="33" Template="{DynamicResource MenuItemsStandardStyle}" Canvas.Top="50" Click="Settingsbtn_Click"/>
            <Button Name="Aboutbtn" Content="About" Canvas.Top="88" Width="130" Background="{x:Null}" Foreground="White" FontSize="14" FontFamily="{StaticResource cdfont}" BorderBrush="{x:Null}" BorderThickness="0" Template="{DynamicResource MenuItemsStandardStyle}" Height="33" Click="Aboutbtn_Click"/>
            <Button Name="Toolsbtn" Content="Tools" Width="130" Background="{x:Null}" Foreground="White" FontSize="14" FontFamily="{StaticResource cdfont}" BorderBrush="{x:Null}" BorderThickness="0" Height="33" Template="{DynamicResource MenuItemsStandardStyle}" Canvas.Top="12" Click="Toolsbtn_Click"/>
        </DockPanel>






        <DataGrid Margin="130,33,-0.4,0" CanUserResizeRows="False" FontFamily="{StaticResource cdfont}" x:Name="DataGrComp" AutoGenerateColumns="False" IsReadOnly="True" BorderThickness="0" HorizontalAlignment="Stretch"
                  VerticalAlignment="Stretch" Foreground="Black" CellStyle="{DynamicResource DataGridCellStyle}"
                  RowStyle="{DynamicResource DataGridRowStyle}" ColumnHeaderStyle="{DynamicResource ColumnHeaderStyle}" SelectionMode="Single" HeadersVisibility="Column" Visibility="Hidden" MouseLeftButtonDown="DataGrComp_MouseLeftButtonDown" SelectionChanged="DataGrDevice_SelectionChanged">


            <DataGrid.Columns>
                <DataGridTextColumn Binding="{Binding CD_Name}"  Header="Name" MinWidth="120">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="Padding" Value="{StaticResource Pdng}"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Binding="{Binding CD_Phone}" Header="Phone Number" MinWidth="120">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="Padding" Value="{StaticResource Pdng}"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Binding="{Binding CD_Externals}" Header="External Parts" MinWidth="100" Visibility="Hidden">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="Padding" Value="{StaticResource Pdng}"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Binding="{Binding CD_Device_company}" Header="Dev Company" MinWidth="100">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="Padding" Value="{StaticResource Pdng}"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Binding="{Binding CD_Model}" Header="Model" MinWidth="100">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="Padding" Value="{StaticResource Pdng}"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Binding="{Binding Serial_Number}" Header="Serial Number" MinWidth="120">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="Padding" Value="{StaticResource Pdng}"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Binding="{Binding CD_Price}" Header="Price" MinWidth="60">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="Padding" Value="{StaticResource Pdng}"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Binding="{Binding CD_SWare_info}" Header="Software Info" MinWidth="100" Visibility="Hidden"/>
                <DataGridTextColumn Binding="{Binding CD_HWare_info}" Header="Hardware Info" MinWidth="100" Visibility="Hidden"/>
                <DataGridTextColumn Binding="{Binding Infopren_Code}" Header="Code" MinWidth="120">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="Padding" Value="{StaticResource Pdng}"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Binding="{Binding CD_Date}" Header="Date" MinWidth="170">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="Padding" Value="{StaticResource Pdng}"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Binding="{Binding CD_Status}" Header="Status" MinWidth="100">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Style.Triggers>

                                <Trigger Property="Text" Value="Repairing">
                                    <Setter Property="Background" Value="Yellow"/>
                                    <Setter Property="Foreground" Value="Black"/>
                                </Trigger>
                                <Trigger Property="Text" Value="Completed">
                                    <Setter Property="Background" Value="Lime"/>
                                    <Setter Property="Foreground" Value="Black"/>
                                </Trigger>
                                <Trigger Property="Text" Value="Failed">
                                    <Setter Property="Background" Value="Red"/>
                                    <Setter Property="Foreground" Value="White"/>
                                </Trigger>
                            </Style.Triggers>
                            <Setter Property="Padding" Value="{StaticResource Pdng}"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>


            </DataGrid.Columns>

        </DataGrid>



        <DataGrid  Margin="130,33,-0.4,0" FontFamily="{StaticResource cdfont}" CanUserResizeRows="False" x:Name="DataGrLap" SelectionChanged="DataGrDevice_SelectionChanged" AutoGenerateColumns="False" IsReadOnly="True" BorderThickness="0"
                   HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Foreground="Black" Background="#FFF0F0F0" Visibility="Hidden" MouseLeftButtonDown="DataGrComp_MouseLeftButtonDown"
                   CellStyle="{DynamicResource DataGridCellStyle}" RowStyle="{DynamicResource DataGridRowStyle}" ColumnHeaderStyle="{DynamicResource ColumnHeaderStyle}" HeadersVisibility="Column">
            <DataGrid.Columns>
                <DataGridTextColumn Binding="{Binding CD_Name}"  Header="Name" MinWidth="120">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="Padding" Value="{StaticResource Pdng}"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Binding="{Binding CD_Phone}" Header="Phone Number" MinWidth="120">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="Padding" Value="{StaticResource Pdng}"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Binding="{Binding CD_Externals}" Header="External Parts" MinWidth="100" Visibility="Hidden">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="Padding" Value="{StaticResource Pdng}"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Binding="{Binding CD_Device_company}" Header="Dev Company" MinWidth="100">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="Padding" Value="{StaticResource Pdng}"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Binding="{Binding CD_Model}" Header="Model" MinWidth="100">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="Padding" Value="{StaticResource Pdng}"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Binding="{Binding Serial_Number}" Header="Serial Number" MinWidth="120">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="Padding" Value="{StaticResource Pdng}"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Binding="{Binding CD_Price}" Header="Price" MinWidth="60">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="Padding" Value="{StaticResource Pdng}"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Binding="{Binding CD_SWare_info}" Header="Software Info" MinWidth="100" Visibility="Hidden"/>
                <DataGridTextColumn Binding="{Binding CD_HWare_info}" Header="Hardware Info" MinWidth="100" Visibility="Hidden"/>
                <DataGridTextColumn Binding="{Binding Infopren_Code}" Header="Code" MinWidth="120">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="Padding" Value="{StaticResource Pdng}"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Binding="{Binding CD_Date}" Header="Date" MinWidth="170">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="Padding" Value="{StaticResource Pdng}"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Binding="{Binding CD_Status}" Header="Status" MinWidth="100">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Style.Triggers>

                                <Trigger Property="Text" Value="Repairing">
                                    <Setter Property="Background" Value="Yellow"/>
                                    <Setter Property="Foreground" Value="Black"/>
                                </Trigger>
                                <Trigger Property="Text" Value="Completed">
                                    <Setter Property="Background" Value="Lime"/>
                                    <Setter Property="Foreground" Value="Black"/>
                                </Trigger>
                                <Trigger Property="Text" Value="Failed">
                                    <Setter Property="Background" Value="Red"/>
                                    <Setter Property="Foreground" Value="White"/>
                                </Trigger>
                            </Style.Triggers>
                            <Setter Property="Padding" Value="{StaticResource Pdng}"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>



            </DataGrid.Columns>

        </DataGrid>



        <DataGrid  Margin="130,33,-0.4,0" FontFamily="{StaticResource cdfont}" CanUserResizeRows="False" SelectionChanged="DataGrDevice_SelectionChanged" x:Name="DataGrMob" AutoGenerateColumns="False" IsReadOnly="True"
                   BorderThickness="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Visibility="Hidden"
                   CellStyle="{DynamicResource DataGridCellStyle}" RowStyle="{DynamicResource DataGridRowStyle}" ColumnHeaderStyle="{DynamicResource ColumnHeaderStyle}" HeadersVisibility="Column">
            <DataGrid.Columns>
                <DataGridTextColumn Binding="{Binding CD_Name}"  Header="Name" MinWidth="120">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="Padding" Value="{StaticResource Pdng}"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Binding="{Binding CD_Phone}" Header="Phone Number" MinWidth="120">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="Padding" Value="{StaticResource Pdng}"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Binding="{Binding CD_Externals}" Header="External Parts" MinWidth="100" Visibility="Hidden">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="Padding" Value="{StaticResource Pdng}"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Binding="{Binding CD_Device_company}" Header="Dev Company" MinWidth="100">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="Padding" Value="{StaticResource Pdng}"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Binding="{Binding CD_Model}" Header="Model" MinWidth="100">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="Padding" Value="{StaticResource Pdng}"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Binding="{Binding Serial_Number}" Header="Serial Number" MinWidth="120">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="Padding" Value="{StaticResource Pdng}"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Binding="{Binding CD_Price}" Header="Price" MinWidth="60">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="Padding" Value="{StaticResource Pdng}"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Binding="{Binding CD_SWare_info}" Header="Software Info" MinWidth="100" Visibility="Hidden"/>
                <DataGridTextColumn Binding="{Binding CD_HWare_info}" Header="Hardware Info" MinWidth="100" Visibility="Hidden"/>
                <DataGridTextColumn Binding="{Binding Infopren_Code}" Header="Code" MinWidth="120">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="Padding" Value="{StaticResource Pdng}"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Binding="{Binding CD_Date}" Header="Date" MinWidth="170">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="Padding" Value="{StaticResource Pdng}"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Binding="{Binding CD_Status}" Header="Status" MinWidth="100">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Style.Triggers>

                                <Trigger Property="Text" Value="Repairing">
                                    <Setter Property="Background" Value="Yellow"/>
                                    <Setter Property="Foreground" Value="Black"/>
                                </Trigger>
                                <Trigger Property="Text" Value="Completed">
                                    <Setter Property="Background" Value="Lime"/>
                                    <Setter Property="Foreground" Value="Black"/>
                                </Trigger>
                                <Trigger Property="Text" Value="Failed">
                                    <Setter Property="Background" Value="Red"/>
                                    <Setter Property="Foreground" Value="White"/>
                                </Trigger>
                            </Style.Triggers>
                            <Setter Property="Padding" Value="{StaticResource Pdng}"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
            </DataGrid.Columns>
        </DataGrid>


        <DataGrid  Margin="130,33,-0.4,0" FontFamily="{StaticResource cdfont}" CanUserResizeRows="False" SelectionChanged="DataGrDevice_SelectionChanged" x:Name="DataGrTab" AutoGenerateColumns="False" IsReadOnly="True"
                   BorderThickness="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Visibility="Hidden"
                   CellStyle="{DynamicResource DataGridCellStyle}" RowStyle="{DynamicResource DataGridRowStyle}" ColumnHeaderStyle="{DynamicResource ColumnHeaderStyle}" HeadersVisibility="Column">
            <DataGrid.Columns>
                <DataGridTextColumn Binding="{Binding CD_Name}"  Header="Name" MinWidth="120">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="Padding" Value="{StaticResource Pdng}"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Binding="{Binding CD_Phone}" Header="Phone Number" MinWidth="120">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="Padding" Value="{StaticResource Pdng}"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Binding="{Binding CD_Externals}" Header="External Parts" MinWidth="100" Visibility="Hidden">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="Padding" Value="{StaticResource Pdng}"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Binding="{Binding CD_Device_company}" Header="Dev Company" MinWidth="100">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="Padding" Value="{StaticResource Pdng}"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Binding="{Binding CD_Model}" Header="Model" MinWidth="100">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="Padding" Value="{StaticResource Pdng}"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Binding="{Binding Serial_Number}" Header="Serial Number" MinWidth="120">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="Padding" Value="{StaticResource Pdng}"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Binding="{Binding CD_Price}" Header="Price" MinWidth="60">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="Padding" Value="{StaticResource Pdng}"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Binding="{Binding CD_SWare_info}" Header="Software Info" MinWidth="100" Visibility="Hidden"/>
                <DataGridTextColumn Binding="{Binding CD_HWare_info}" Header="Hardware Info" MinWidth="100" Visibility="Hidden"/>
                <DataGridTextColumn Binding="{Binding Infopren_Code}" Header="Code" MinWidth="120">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="Padding" Value="{StaticResource Pdng}"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Binding="{Binding CD_Date}" Header="Date" MinWidth="170">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="Padding" Value="{StaticResource Pdng}"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Binding="{Binding CD_Status}" Header="Status" MinWidth="100">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Style.Triggers>

                                <Trigger Property="Text" Value="Repairing">
                                    <Setter Property="Background" Value="Yellow"/>
                                    <Setter Property="Foreground" Value="Black"/>
                                </Trigger>
                                <Trigger Property="Text" Value="Completed">
                                    <Setter Property="Background" Value="Lime"/>
                                    <Setter Property="Foreground" Value="Black"/>
                                </Trigger>
                                <Trigger Property="Text" Value="Failed">
                                    <Setter Property="Background" Value="Red"/>
                                    <Setter Property="Foreground" Value="White"/>
                                </Trigger>
                            </Style.Triggers>
                            <Setter Property="Padding" Value="{StaticResource Pdng}"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>



            </DataGrid.Columns>
        </DataGrid>


        <DataGrid  Margin="130,33,-0.4,0" FontFamily="{StaticResource cdfont}" CanUserResizeRows="False" SelectionChanged="DataGrDevice_SelectionChanged" x:Name="DataGrOth" AutoGenerateColumns="False" IsReadOnly="True"
                   BorderThickness="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                   CellStyle="{DynamicResource DataGridCellStyle}" RowStyle="{DynamicResource DataGridRowStyle}" ColumnHeaderStyle="{DynamicResource ColumnHeaderStyle}" Visibility="Hidden" HeadersVisibility="Column">
            <DataGrid.Columns>

                <DataGridTextColumn Binding="{Binding CD_Name}"  Header="Name" MinWidth="120">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="Padding" Value="{StaticResource Pdng}"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Binding="{Binding CD_Phone}" Header="Phone Number" MinWidth="120">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="Padding" Value="{StaticResource Pdng}"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Binding="{Binding CD_Externals}" Header="External Parts" MinWidth="100" Visibility="Hidden">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="Padding" Value="{StaticResource Pdng}"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Binding="{Binding CD_Device_company}" Header="Dev Company" MinWidth="100">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="Padding" Value="{StaticResource Pdng}"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Binding="{Binding CD_Model}" Header="Model" MinWidth="100">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="Padding" Value="{StaticResource Pdng}"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Binding="{Binding Serial_Number}" Header="Serial Number" MinWidth="120">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="Padding" Value="{StaticResource Pdng}"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Binding="{Binding CD_Price}" Header="Price" MinWidth="60">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="Padding" Value="{StaticResource Pdng}"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Binding="{Binding CD_SWare_info}" Header="Software Info" MinWidth="100" Visibility="Hidden"/>
                <DataGridTextColumn Binding="{Binding CD_HWare_info}" Header="Hardware Info" MinWidth="100" Visibility="Hidden"/>
                <DataGridTextColumn Binding="{Binding Infopren_Code}" Header="Code" MinWidth="120">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="Padding" Value="{StaticResource Pdng}"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Binding="{Binding CD_Date}" Header="Date" MinWidth="170">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="Padding" Value="{StaticResource Pdng}"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Binding="{Binding CD_Status}" Header="Status" MinWidth="100">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Style.Triggers>

                                <Trigger Property="Text" Value="Repairing">
                                    <Setter Property="Background" Value="Yellow"/>
                                    <Setter Property="Foreground" Value="Black"/>
                                </Trigger>
                                <Trigger Property="Text" Value="Completed">
                                    <Setter Property="Background" Value="Lime"/>
                                    <Setter Property="Foreground" Value="Black"/>
                                </Trigger>
                                <Trigger Property="Text" Value="Failed">
                                    <Setter Property="Background" Value="Red"/>
                                    <Setter Property="Foreground" Value="White"/>
                                </Trigger>
                            </Style.Triggers>
                            <Setter Property="Padding" Value="{StaticResource Pdng}"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
            </DataGrid.Columns>
        </DataGrid>


        <Canvas Name="Statusbar" Height="20" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Background="#FF050059" Margin="0,0,0,-0.4">
            <Label Margin="0" Padding="0,0,0,0" Height="16" x:Name="Status" Content="Starting..." Width="660" FontSize="14" Foreground="White" FontFamily="{StaticResource cdfont}" Canvas.Top="2" Canvas.Left="2"/>
        </Canvas>
        <Button x:Name="homebtn" HorizontalAlignment="Left" Width="30" BorderBrush="{x:Null}" BorderThickness="0" Margin="49,0,0,33.8" Height="30" VerticalAlignment="Bottom" Click="homebtn_Click" Cursor="Hand">
            <Button.Background>
                <ImageBrush ImageSource="Assets/homebtn.png"/>
            </Button.Background>
            <Button.Template>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Button.IsDefaulted" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border">
                                <Setter.Value>
                                    <ImageBrush ImageSource="Assets\homebtnmousehover.png"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border">
                                <Setter.Value>
                                    <ImageBrush ImageSource="Assets\homebtnpressed.png"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="border" Value="#FFF4F4F4"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="#FFADB2B5"/>
                            <Setter Property="Foreground" Value="#FF838383"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>
        </Button>
        <Grid Name="Viewgrid" HorizontalAlignment="Stretch" Margin="130,33,0,19.6" VerticalAlignment="Stretch" />

    </Grid>
</Window>
    
